version: '3'
services:

  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - 80:80
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./broker-service
      dockerfile: Dockerfile
    container_name: broker
    restart: always
    ports:
      - 8080:80
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth
    restart: always
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"
    ports:
      - 8081:80
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    container_name: "postgres"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./data/db-data/postgres/:/var/lib/postgresql/data/

  # Observability tools

  jaeger:
    image: jaegertracing/jaeger-agent
    container_name: jaeger
    ports:
      - "14268:14268"
      - "6831:6831"
      - "5778:5778"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    command: ["--reporter.grpc.host-port=otel:14250"]

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: "otel"
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "55680:55680"

  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret

  tempo:
    image: grafana/tempo:latest
    container_name: "tempo"
    volumes:
      - ./config/tempo/tempo-local.yaml:/etc/tempo-local.yaml
    command: "-config.file=/etc/tempo-local.yaml"
    ports:
      - "3100:3100"
      - "3200:3200"